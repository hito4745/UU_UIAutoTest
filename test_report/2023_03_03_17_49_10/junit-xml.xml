<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="1" failures="1" skipped="0" tests="11" time="80.434" timestamp="2023-03-03T17:49:10.840022" hostname="111deMacBook-Pro.local"><testcase classname="test_case.test_baidu.TestBaidu" name="test_baidu_001" time="8.179" /><testcase classname="test_case.test_baidu.TestBaidu" name="test_baidu_002" time="3.469" /><testcase classname="test_case.test_baidu.TestBaidu" name="test_baidu_003" time="0.561" /><testcase classname="test_case.test_baidu.TestBaidu" name="test_baidu_004[case1]" time="3.246" /><testcase classname="test_case.test_baidu.TestBaidu" name="test_baidu_004[case2]" time="2.516" /><testcase classname="test_case.test_baidu.TestBaidu" name="test_baidu_004[case3]" time="2.347" /><testcase classname="test_case.test_baidu.TestBaidu" name="test_baidu_006[1-Selenium]" time="2.526" /><testcase classname="test_case.test_baidu.TestBaidu" name="test_baidu_006[2-playwright]" time="3.777" /><testcase classname="test_case.test_inventory.TestInventory" name="test_grounding_onleysale" time="6.276"><error message="failed on setup with &quot;file /Users/mac/Downloads/playwright-pytest-demo-master/test_case/test_inventory.py, line 27&#10;      @allure.story(&quot;只卖不租-单个上架&quot;)&#10;      def test_grounding_onleysale(self, page, price, comment):&#10;E       fixture 'price' not found&#10;&gt;       available fixtures: _verify_url, anyio_backend, anyio_backend_name, anyio_backend_options, autojump_clock, baseUrl_baidu, base_url, browser, browser_channel, browser_context_args, browser_name, browser_type, browser_type_launch_args, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, context, delete_output_dir, device, doctest_namespace, event_loop, extra, http_client, http_server, http_server_client, http_server_port, include_metadata_in_junit_xml, io_loop, is_chromium, is_firefox, is_webkit, launch_browser, login_page, metadata, mock_clock, monkeypatch, nursery, page, playwright, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, twisted_greenlet, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/mac/Downloads/playwright-pytest-demo-master/test_case/test_inventory.py:27&quot;">file /Users/mac/Downloads/playwright-pytest-demo-master/test_case/test_inventory.py, line 27
      @allure.story("只卖不租-单个上架")
      def test_grounding_onleysale(self, page, price, comment):
E       fixture 'price' not found
&gt;       available fixtures: _verify_url, anyio_backend, anyio_backend_name, anyio_backend_options, autojump_clock, baseUrl_baidu, base_url, browser, browser_channel, browser_context_args, browser_name, browser_type, browser_type_launch_args, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, context, delete_output_dir, device, doctest_namespace, event_loop, extra, http_client, http_server, http_server_client, http_server_port, include_metadata_in_junit_xml, io_loop, is_chromium, is_firefox, is_webkit, launch_browser, login_page, metadata, mock_clock, monkeypatch, nursery, page, playwright, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, twisted_greenlet, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/mac/Downloads/playwright-pytest-demo-master/test_case/test_inventory.py:27</error></testcase><testcase classname="test_case.test_inventory.TestInventory" name="test_grounding" time="41.461"><failure message="playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.&#10;=========================== logs ===========================&#10;waiting for locator(&quot;xpath=//html/body/div[2]/div/div/div[3]/div[1]/div[4]/div/div/div[2]/div[1]/div[1]/label/span[1]/input&quot;)&#10;============================================================">self = &lt;test_case.test_inventory.TestInventory object at 0x112d30070&gt;
page = &lt;Page url='https://testwww.youpin898.com/'&gt;

    @allure.story("可租可买-单个上架")
    # 点击我的库存
    def test_grounding(self, page):
        # page.locator(InventoryPage.my_inventory).click()
        # 库存加载较慢，设置一个等待时间
        page.wait_for_timeout(10000)
        # 点击可出售筛选项
        # page.locator(InventoryPage.show_can_sale).click()
        # page.wait_for_timeout(5000)
        # 选择商品
&gt;       page.locator(InventoryPage.select_goods).click()

test_case/test_inventory.py:77: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.10/site-packages/playwright/sync_api/_generated.py:15388: in click
    self._sync(
venv/lib/python3.10/site-packages/playwright/_impl/_locator.py:146: in click
    return await self._frame.click(self._selector, strict=True, **params)
venv/lib/python3.10/site-packages/playwright/_impl/_frame.py:489: in click
    await self._channel.send("click", locals_to_params(locals()))
venv/lib/python3.10/site-packages/playwright/_impl/_connection.py:44: in send
    return await self._connection.wrap_api_call(
venv/lib/python3.10/site-packages/playwright/_impl/_connection.py:419: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;playwright._impl._connection.Channel object at 0x1130c2050&gt;
method = 'click'
params = {'selector': 'xpath=//html/body/div[2]/div/div/div[3]/div[1]/div[4]/div/div/div[2]/div[1]/div[1]/label/span[1]/input', 'strict': True}
return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -&gt; Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(self._guid, method, params)
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
&gt;       result = next(iter(done)).result()
E       playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.
E       =========================== logs ===========================
E       waiting for locator("xpath=//html/body/div[2]/div/div/div[3]/div[1]/div[4]/div/div/div[2]/div[1]/div[1]/label/span[1]/input")
E       ============================================================

venv/lib/python3.10/site-packages/playwright/_impl/_connection.py:79: TimeoutError</failure></testcase><testcase classname="test_case.test_login.TestLogin" name="test_login_001[15557993305-888888]" time="5.299" /></testsuite></testsuites>