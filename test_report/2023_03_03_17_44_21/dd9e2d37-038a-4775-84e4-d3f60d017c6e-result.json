{"name": "test_grounding_onleysale[case1]", "status": "broken", "statusDetails": {"message": "playwright._impl._api_types.Error: value: expected string, got number", "trace": "self = <test_case.test_inventory.TestInventory object at 0x10f7e4d60>\npage = <Page url='https://testwww.youpin898.com/stock?gameId=730&tabKey=1'>\nprice = '1', comment = 'UI自动化上架demo正确上架数字1'\n\n    @pytest.mark.parametrize(\n        \"price, comment\",\n        [(\"1\", \"UI自动化上架demo正确上架数字1\"),\n         (\"0\", \"UI自动化上架demo-价格为0\"),\n         (\"啊啊啊啊\", \"UI自动化上架demo-价格框输入文字\"),\n         (\"&&&¥%……&*\", \"UI自动化上架demo-符号\"),\n         (\"-9\", \"UI自动化上架demo-负数\"),\n         ],\n        ids=[\"case1\", \"case2\", \"case3\", \"case4\", \"case5\"]\n    )\n    @allure.story(\"只卖不租-单个上架\")\n    def test_grounding_onleysale(self, page, price, comment):\n        # 点击我的库存\n        page.locator(InventoryPage.my_inventory).click()\n        # 库存加载较慢，设置一个等待时间\n        page.wait_for_timeout(10000)\n        page.locator(InventoryPage.show_all).click()\n        # 点击可出售筛选项\n        page.locator(InventoryPage.show_can_sale).click()\n        page.wait_for_timeout(5000)\n        # 选择商品\n        page.locator(InventoryPage.select_goods).click()\n        page.wait_for_timeout(5000)\n        # 点击上架\n        page.locator(InventoryPage.grounding_but).click()\n        page.wait_for_timeout(5000)\n        # 点击只卖不租\n        page.locator(InventoryPage.only_sale).click()\n        # 输入价格\n>       page.locator(InventoryPage.pricing_sale).fill(1)\n\ntest_case/test_inventory.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv/lib/python3.10/site-packages/playwright/sync_api/_generated.py:15755: in fill\n    self._sync(\nvenv/lib/python3.10/site-packages/playwright/_impl/_locator.py:198: in fill\n    return await self._frame.fill(self._selector, strict=True, **params)\nvenv/lib/python3.10/site-packages/playwright/_impl/_frame.py:528: in fill\n    await self._channel.send(\"fill\", locals_to_params(locals()))\nvenv/lib/python3.10/site-packages/playwright/_impl/_connection.py:44: in send\n    return await self._connection.wrap_api_call(\nvenv/lib/python3.10/site-packages/playwright/_impl/_connection.py:419: in wrap_api_call\n    return await cb()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Channel object at 0x10fbd4280>\nmethod = 'fill'\nparams = {'selector': 'xpath=//html/body/div[5]/div/div[2]/div/div[2]/div/div/div[2]/div/div/div[2]/div[4]/input', 'strict': True, 'value': 1}\nreturn_as_dict = False\n\n    async def inner_send(\n        self, method: str, params: Optional[Dict], return_as_dict: bool\n    ) -> Any:\n        if params is None:\n            params = {}\n        callback = self._connection._send_message_to_server(self._guid, method, params)\n        if self._connection._error:\n            error = self._connection._error\n            self._connection._error = None\n            raise error\n        done, _ = await asyncio.wait(\n            {\n                self._connection._transport.on_error_future,\n                callback.future,\n            },\n            return_when=asyncio.FIRST_COMPLETED,\n        )\n        if not callback.future.done():\n            callback.future.cancel()\n>       result = next(iter(done)).result()\nE       playwright._impl._api_types.Error: value: expected string, got number\n\nvenv/lib/python3.10/site-packages/playwright/_impl/_connection.py:79: Error"}, "attachments": [{"name": "test-case-test-inventory-py-testinventory-test-grounding-onleysale-case1.png", "source": "7bbb1778-69a5-4c18-9090-f4d5bd1659a2-attachment.png", "type": "image/png"}, {"name": "log", "source": "3380f672-ddf5-4582-aa3e-2670612d337a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "price", "value": "'1'"}, {"name": "comment", "value": "'UI自动化上架demo正确上架数字1'"}], "start": 1677836692995, "stop": 1677836719517, "uuid": "a74d0ddf-2ef1-4b35-8a0c-7943eb81e631", "historyId": "88ae750853ae068fbb8eed66a5caa89d", "testCaseId": "9a7f6d2b230710cac8e64d5236d9fa14", "fullName": "test_case.test_inventory.TestInventory#test_grounding_onleysale", "labels": [{"name": "story", "value": "只卖不租-单个上架"}, {"name": "feature", "value": "库存页测试"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_inventory"}, {"name": "subSuite", "value": "TestInventory"}, {"name": "host", "value": "111deMacBook-Pro.local"}, {"name": "thread", "value": "22678-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_inventory"}]}