{"name": "test_grounding_onleysale", "status": "broken", "statusDetails": {"message": "playwright._impl._api_types.Error: value: expected string, got number", "trace": "self = <test_case.test_inventory.TestInventory object at 0x111398400>\npage = <Page url='https://testwww.youpin898.com/stock?gameId=730&tabKey=1'>\n\n    @allure.story(\"只卖不租-单个上架\")\n    def test_grounding_onleysale(self, page):\n        # 点击我的库存\n        page.locator(InventoryPage.my_inventory).click()\n        # 库存加载较慢，设置一个等待时间\n        page.wait_for_timeout(10000)\n        page.locator(InventoryPage.show_all).click()\n        # 点击可出售筛选项\n        page.locator(InventoryPage.show_can_sale).click()\n        page.wait_for_timeout(5000)\n        # 选择商品\n        page.locator(InventoryPage.select_goods).click()\n        page.wait_for_timeout(5000)\n        # 点击上架\n        page.locator(InventoryPage.grounding_but).click()\n        page.wait_for_timeout(5000)\n        # 点击只卖不租\n        page.locator(InventoryPage.only_sale).click()\n        # 输入价格\n>       page.locator(InventoryPage.pricing_sale).fill(1)\n\ntest_case/test_inventory.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv/lib/python3.10/site-packages/playwright/sync_api/_generated.py:15755: in fill\n    self._sync(\nvenv/lib/python3.10/site-packages/playwright/_impl/_locator.py:198: in fill\n    return await self._frame.fill(self._selector, strict=True, **params)\nvenv/lib/python3.10/site-packages/playwright/_impl/_frame.py:528: in fill\n    await self._channel.send(\"fill\", locals_to_params(locals()))\nvenv/lib/python3.10/site-packages/playwright/_impl/_connection.py:44: in send\n    return await self._connection.wrap_api_call(\nvenv/lib/python3.10/site-packages/playwright/_impl/_connection.py:419: in wrap_api_call\n    return await cb()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Channel object at 0x1117753f0>\nmethod = 'fill'\nparams = {'selector': 'xpath=//html/body/div[5]/div/div[2]/div/div[2]/div/div/div[2]/div/div/div[2]/div[4]/input', 'strict': True, 'value': 1}\nreturn_as_dict = False\n\n    async def inner_send(\n        self, method: str, params: Optional[Dict], return_as_dict: bool\n    ) -> Any:\n        if params is None:\n            params = {}\n        callback = self._connection._send_message_to_server(self._guid, method, params)\n        if self._connection._error:\n            error = self._connection._error\n            self._connection._error = None\n            raise error\n        done, _ = await asyncio.wait(\n            {\n                self._connection._transport.on_error_future,\n                callback.future,\n            },\n            return_when=asyncio.FIRST_COMPLETED,\n        )\n        if not callback.future.done():\n            callback.future.cancel()\n>       result = next(iter(done)).result()\nE       playwright._impl._api_types.Error: value: expected string, got number\n\nvenv/lib/python3.10/site-packages/playwright/_impl/_connection.py:79: Error"}, "attachments": [{"name": "test-case-test-inventory-py-testinventory-test-grounding-onleysale.png", "source": "2d17518b-ff21-4c45-8036-1971a0f1076b-attachment.png", "type": "image/png"}, {"name": "log", "source": "a8a33038-705e-42fa-8f07-4b075c0cc024-attachment.txt", "type": "text/plain"}], "start": 1677837194096, "stop": 1677837220477, "uuid": "89a27b06-8fe9-43d7-8aef-aebde5e80b4e", "historyId": "254710fa0b36828267a23df7f3f6e680", "testCaseId": "9a7f6d2b230710cac8e64d5236d9fa14", "fullName": "test_case.test_inventory.TestInventory#test_grounding_onleysale", "labels": [{"name": "feature", "value": "库存页测试"}, {"name": "story", "value": "只卖不租-单个上架"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_inventory"}, {"name": "subSuite", "value": "TestInventory"}, {"name": "host", "value": "111deMacBook-Pro.local"}, {"name": "thread", "value": "23275-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_inventory"}]}