{"name": "test_grounding", "status": "broken", "statusDetails": {"message": "playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator(\"xpath=//html/body/div[2]/div/div/div[1]/div/ul/li[7]/a/span\")\n  locator resolved to <span class=\"f14\" data-v-448173c4=\"\">我的库存</span>\nattempting click action\n  waiting for element to be visible, enabled and stable\n    element is not visible - waiting...\n============================================================", "trace": "self = <test_case.test_inventory.TestInventory object at 0x11380c490>\npage = <Page url='https://testwww.youpin898.com/'>\n\n    @allure.story(\"可租可买-单个上架\")\n    # 点击我的库存\n    def test_grounding(self, page):\n>       page.locator(InventoryPage.my_inventory).click()\n\ntest_case/test_inventory.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv/lib/python3.10/site-packages/playwright/sync_api/_generated.py:15388: in click\n    self._sync(\nvenv/lib/python3.10/site-packages/playwright/_impl/_locator.py:146: in click\n    return await self._frame.click(self._selector, strict=True, **params)\nvenv/lib/python3.10/site-packages/playwright/_impl/_frame.py:489: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\nvenv/lib/python3.10/site-packages/playwright/_impl/_connection.py:44: in send\n    return await self._connection.wrap_api_call(\nvenv/lib/python3.10/site-packages/playwright/_impl/_connection.py:419: in wrap_api_call\n    return await cb()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Channel object at 0x113bb09d0>\nmethod = 'click'\nparams = {'selector': 'xpath=//html/body/div[2]/div/div/div[1]/div/ul/li[7]/a/span', 'strict': True}\nreturn_as_dict = False\n\n    async def inner_send(\n        self, method: str, params: Optional[Dict], return_as_dict: bool\n    ) -> Any:\n        if params is None:\n            params = {}\n        callback = self._connection._send_message_to_server(self._guid, method, params)\n        if self._connection._error:\n            error = self._connection._error\n            self._connection._error = None\n            raise error\n        done, _ = await asyncio.wait(\n            {\n                self._connection._transport.on_error_future,\n                callback.future,\n            },\n            return_when=asyncio.FIRST_COMPLETED,\n        )\n        if not callback.future.done():\n            callback.future.cancel()\n>       result = next(iter(done)).result()\nE       playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.\nE       =========================== logs ===========================\nE       waiting for locator(\"xpath=//html/body/div[2]/div/div/div[1]/div/ul/li[7]/a/span\")\nE         locator resolved to <span class=\"f14\" data-v-448173c4=\"\">我的库存</span>\nE       attempting click action\nE         waiting for element to be visible, enabled and stable\nE           element is not visible - waiting...\nE       ============================================================\n\nvenv/lib/python3.10/site-packages/playwright/_impl/_connection.py:79: TimeoutError"}, "attachments": [{"name": "test-case-test-inventory-py-testinventory-test-grounding.png", "source": "baa8d7ce-e311-4295-a7ba-10b2eda685ec-attachment.png", "type": "image/png"}], "start": 1677826755197, "stop": 1677826785205, "uuid": "1b9edabc-662f-4005-a2cc-01cc228ad5d2", "historyId": "1aa5a0b91c297e10c8633867c524e5d4", "testCaseId": "f0bdd1111aeca446a6dc4d5b1b367a49", "fullName": "test_case.test_inventory.TestInventory#test_grounding", "labels": [{"name": "feature", "value": "库存页测试"}, {"name": "story", "value": "可租可买-单个上架"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_inventory"}, {"name": "subSuite", "value": "TestInventory"}, {"name": "host", "value": "111deMacBook-Pro.local"}, {"name": "thread", "value": "18994-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_inventory"}]}